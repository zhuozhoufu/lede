# added soemthing
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Customized

on:
  schedule:
    - cron: 0 20 * * *
  push:
    branches: 
      - master
  # release:
  #   types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=y
          EOF
          IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-accesscontrol=y#访问时间控制
          CONFIG_PACKAGE_luci-app-adblock=y#ADB广告过滤
          CONFIG_PACKAGE_luci-app-adbyby-plus=y#广告屏蔽大师Plus +
          CONFIG_PACKAGE_luci-app-adbyby=y#广告过滤大师（已弃）
          CONFIG_PACKAGE_luci-app-adkill=y#广告过滤（已弃）
          CONFIG_PACKAGE_luci-app-advanced-reboot=y#Linksys高级重启
          CONFIG_PACKAGE_luci-app-ahcp=y#支持AHCPd
          CONFIG_PACKAGE_luci-app-aliddns=y#阿里DDNS客户端
          CONFIG_PACKAGE_luci-app-amule=y#aMule下载工具
          CONFIG_PACKAGE_luci-app-aria2=y# Aria2下载工具
          CONFIG_PACKAGE_luci-app-arpbind=y#IP/MAC绑定
          CONFIG_PACKAGE_luci-app-asterisk=y#支持Asterisk电话服务器
          CONFIG_PACKAGE_luci-app-attendedsysupgrade=y#固件更新升级相关
          CONFIG_PACKAGE_luci-app-autoreboot=y#支持计划重启
          CONFIG_PACKAGE_luci-app-bcp38=y#BCP38网络入口过滤(不确定)
          CONFIG_PACKAGE_luci-app-bird4=y#Bird 4(未知)
          CONFIG_PACKAGE_luci-app-bird6=y#Bird 6(未知)
          CONFIG_PACKAGE_luci-app-bmx6=y#BMX6路由协议
          CONFIG_PACKAGE_luci-app-bmx7=y#BMX7路由协议
          CONFIG_PACKAGE_luci-app-caldav=y#联系人
          CONFIG_PACKAGE_luci-app-cjdns=y#加密IPV6网络相关
          CONFIG_PACKAGE_luci-app-clamav=y#ClamAV杀毒软件
          CONFIG_PACKAGE_luci-app-commands=y#Shell命令模块
          CONFIG_PACKAGE_luci-app-cshark=y#CloudShark捕获工具
          CONFIG_PACKAGE_luci-app-ddns=y#动态域名 DNS
          CONFIG_PACKAGE_luci-app-diag-core=y#core诊断工具
          CONFIG_PACKAGE_luci-app-dnscrypt-proxy=y#DNSCrypt解决DNS污染
          CONFIG_PACKAGE_luci-app-dnscrypt-dnsforwarder=y#DNSForwarder防DNS污染
          CONFIG_PACKAGE_luci-app-dnspod=y#DNSPod
          CONFIG_PACKAGE_luci-app-dump1090=y#民航无线频率(不确定)
          CONFIG_PACKAGE_luci-app-dynapoint=y#DynaPoint(未知)
          CONFIG_PACKAGE_luci-app-e2guardian=y#Web内容过滤器
          CONFIG_PACKAGE_luci-app-filetransfer=y#文件传输
          CONFIG_PACKAGE_luci-app-firewall=y#添加防火墙
          CONFIG_PACKAGE_luci-app-flowoffload=y#Turbo ACC FLOW转发加速
          CONFIG_PACKAGE_luci-app-freifunk-diagnostics=y#freifunk组件 诊断(未知)
          CONFIG_PACKAGE_luci-app-freifunk-policyrouting=y#freifunk组件 策略路由(未知)
          CONFIG_PACKAGE_luci-app-freifunk-widgets=y#freifunk组件 索引(未知)
          CONFIG_PACKAGE_luci-app-frpc=y#内网穿透 Frp
          CONFIG_PACKAGE_luci-app-fwknopd=y#Firewall Knock Operator服务器
          CONFIG_PACKAGE_luci-app-guest-wifi=y#WiFi访客网络
          CONFIG_PACKAGE_luci-app-hd-idle=y#硬盘休眠
          CONFIG_PACKAGE_luci-app-hnet=y#Homenet Status家庭网络控制协议
          CONFIG_PACKAGE_luci-app-kooldns=y#virtual服务器 ddns替代方案（已弃）
          CONFIG_PACKAGE_luci-app-koolproxy=y#KP去广告（已弃）
          CONFIG_PACKAGE_luci-app-lxc=y#LXC容器管理
          CONFIG_PACKAGE_luci-app-meshwizard=y#网络设置向导
          CONFIG_PACKAGE_luci-app-minidlna=y#完全兼容DLNA / UPnP-AV客户端的服务器软件
          CONFIG_PACKAGE_luci-app-mjpg-streamer=y#兼容Linux-UVC的摄像头程序
          CONFIG_PACKAGE_luci-app-mmc-over-gpio=y#添加SD卡操作界面（已弃）
          CONFIG_PACKAGE_luci-app-multiwan=y#多拨虚拟网卡（已弃）
          CONFIG_PACKAGE_luci-app-mwan=y#MWAN负载均衡
          CONFIG_PACKAGE_luci-app-mwan3=y#MWAN3分流助手
          CONFIG_PACKAGE_luci-app-n2n_v2=y#N2N内网穿透 N2N v2 virtual服务
          CONFIG_PACKAGE_luci-app-nft-qos=y#QOS流控 Nftables版（已弃）
          CONFIG_PACKAGE_luci-app-ngrokc=y#Ngrok 内网穿透（已弃）
          CONFIG_PACKAGE_luci-app-nlbwmon=y#网络带宽监视器
          CONFIG_PACKAGE_luci-app-noddos=y#NodDOS Clients 阻止DDoS攻击
          CONFIG_PACKAGE_luci-app-ntpc=y#NTP时间同步服务器
          CONFIG_PACKAGE_luci-app-ocserv=y#OpenConnect virtual服务
          CONFIG_PACKAGE_luci-app-olsr=y#OLSR配置和状态模块
          CONFIG_PACKAGE_luci-app-olsr-services=y#OLSR服务器
          CONFIG_PACKAGE_luci-app-olsr-viz=y#OLSR可视化
          CONFIG_PACKAGE_luci-app-ocserv=y#OpenConnect virtual服务（已弃）
          CONFIG_PACKAGE_luci-app-openvirtual=y#Openvirtual客户端
          CONFIG_PACKAGE_luci-app-openvirtual-server=y#易于使用的Openvirtual服务器 Web-UI
          CONFIG_PACKAGE_luci-app-oscam=y#OSCAM服务器（已弃）
          CONFIG_PACKAGE_luci-app-p910nd=y#打印服务器模块
          CONFIG_PACKAGE_luci-app-pagekitee=y#Pagekite内网穿透客户端
          CONFIG_PACKAGE_luci-app-polipo=y#Polipo代理(是一个小型且快速的网页缓存代理)
          CONFIG_PACKAGE_luci-app-pppoe-relay=y#PPPoE NAT穿透 点对点协议(PPP)
          CONFIG_PACKAGE_luci-app-p p t p-server=y#virtual服务器 p p t p
          CONFIG_PACKAGE_luci-app-privoxy=y#Privoxy网络代理(带过滤无缓存)
          CONFIG_PACKAGE_luci-app-qos=y#流量服务质量(QoS)流控
          CONFIG_PACKAGE_luci-app-radicale=y#CalDAV/CardDAV同步工具
          CONFIG_PACKAGE_luci-app-ramfree=y#释放内存
          CONFIG_PACKAGE_luci-app-rp-pppoe-server=y#Roaring Penguin PPPoE Server 服务器
          CONFIG_PACKAGE_luci-app-samba=y#网络共享(Samba)
          CONFIG_PACKAGE_luci-app-samba4=y#网络共享(Samba4)
          CONFIG_PACKAGE_luci-app-sfe=y#Turbo ACC网络加速(开启Fast Path转发加速)
          CONFIG_PACKAGE_luci-app-s-s=y#SS兲朝上网（已弃）
          CONFIG_PACKAGE_luci-app-s-s-libes=y#SS-libev服务端
          CONFIG_PACKAGE_luci-app-shairplay=y#支持AirPlay功能
          CONFIG_PACKAGE_luci-app-siitwizard=y#SIIT配置向导 SIIT-Wizzard
          CONFIG_PACKAGE_luci-app-simple-adblock=y#简单的广告拦截
          CONFIG_PACKAGE_luci-app-simple-softethervirtual=y#SoftEther virtual服务器 NAT穿透（已弃）
          CONFIG_PACKAGE_luci-app-splash=y#Client-Splash是无线MESH网络的一个热点认证系统
          CONFIG_PACKAGE_luci-app-sqm=y#流量智能队列管理(QOS)
          CONFIG_PACKAGE_luci-app-squid=y#Squid代理服务器
          CONFIG_PACKAGE_luci-app-S-S R-plus=y#S-S R兲朝上网Plus+
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-s New Versiong=y#新SS代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include V2ray=y#V2Ray透明代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include Kcptun=y#Kcptun代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Server=y#S-S R客户端
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Socks and Tunnel=y#S-S R代理
          CONFIG_PACKAGE_luci-app-S-S R-pro=y#S-S R-Pro
          CONFIG_PACKAGE_luci-app-S-S Rserver-python=y#s-sR Python服务器
          CONFIG_PACKAGE_luci-app-statistics=y#流量监控工具
          CONFIG_PACKAGE_luci-app-syncdial=y#多拨虚拟网卡(原macvlan)
          CONFIG_PACKAGE_luci-app-tinyproxy=y#Tinyproxy是 HTTP(S)代理服务器
          CONFIG_PACKAGE_luci-app-transmission=y#BT下载工具
          CONFIG_PACKAGE_luci-app-travelmate=y#旅行路由器
          CONFIG_PACKAGE_luci-app-ttyd=y#网页终端命令行
          CONFIG_PACKAGE_luci-app-udpxy=y#udpxy做组播服务器
          CONFIG_PACKAGE_luci-app-uhttpd=y#uHTTPd Web服务器
          CONFIG_PACKAGE_luci-app-unbound=y#Unbound DNS解析器
          CONFIG_PACKAGE_luci-app-upnp=y#通用即插即用UPnP(端口自动转发)
          CONFIG_PACKAGE_luci-app-usb-printer=y#USB 打印服务器
          CONFIG_PACKAGE_luci-app-v2ray-pro=y#V2Ray透明代理
          CONFIG_PACKAGE_luci-app-vlmcsd=y#KMS服务器设置
          CONFIG_PACKAGE_luci-app-vnstat=y#vnStat网络监控(图表)
          CONFIG_PACKAGE_luci-app-virtualbypass=y#virtual BypassWebUI 绕过virtual设置
          CONFIG_PACKAGE_luci-app-vsftpd=y#FTP服务器
          CONFIG_PACKAGE_luci-app-watchcat=y#断网检测功能与定时重启
          CONFIG_PACKAGE_luci-app-webadmin=y#Web管理页面设置
          CONFIG_PACKAGE_luci-app-webshell=y#网页命令行终端（已弃）
          CONFIG_PACKAGE_luci-app-wifischedule=y#WiFi 计划
          CONFIG_PACKAGE_luci-app-wireguard=y#virtual**服务器 WireGuard状态
          CONFIG_PACKAGE_luci-app-wireless-regdb=y#WiFi无线
          CONFIG_PACKAGE_luci-app-wol=y#WOL网络唤醒
          CONFIG_PACKAGE_luci-app-wrtbwmon=y#实时流量监测
          CONFIG_PACKAGE_luci-app-xlnetacc=y#迅雷快鸟
          CONFIG_PACKAGE_luci-app-zerotier=y#ZeroTier内网穿透
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          EOF
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
      - name: Assemble artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./artifact/
